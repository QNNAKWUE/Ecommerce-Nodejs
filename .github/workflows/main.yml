name: CI-CD-Pipeline-to-AWS-ElasticBeanStalk

env:
  EB_PACKAGE_S3_BUCKET_NAME: "tjs-app"
  EB_APPLICATION_NAME      : "tjs-application"
  EB_ENVIRONMENT_NAME      : "tjsapplication-env"
  DEPLOY_PACKAGE_NAME      : "tjs-app-${{github.sha}}.zip"
  AWS_REGION_NAME          : "us-east-2"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ main ]

jobs:
  build_test_and_deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 12.x ]
    
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Installing NPM
        run: npm install
      
      - name: Linting check
        run: npm run lint

      - name: Building application
        run: npm run build --if-present

      # - name: Testing application
      #   run: npm test 

      - name: Create ZIP deployment package
        run: zip -r ${{env.DEPLOY_PACKAGE_NAME}} ./ -x  *.git*

      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3 
        with: 
           aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Copy our Deployment to S3 Bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/


      - name: Run beanstalk deploy
        uses: einaregilsson/beanstalk-deploy@v2
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: env.EB_APPLICATION_NAME
          environment_name: env.EB_ENVIRONMENT_NAME
          region: env.AWS_REGION_NAME 
          version_label: "${{ steps.timestamp.outputs.date }}"
          deployment_package: env.DEPLOY_PACKAGE_NAME 
     
      - name: Deployed!
        run: echo App deployed to ELB  